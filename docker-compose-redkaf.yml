# Deploy using: docker-compose -f docker-compose-rk.yml up
# <CTRL-C> will stop all containers
# Clean-up using: docker-compose -f docker-compose-rk.yml down
version: '3'
services:
    
  # This will deploy Kafka on the local machine as two Docker containers: zookeeper and broker
  # The broker is available to the local clients using URL: "localhost:9092"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  # This will deploy Redis on the local machine as a single Docker container: redis
  # Redis is available to the local clients using URL: "redis://localhost:6379"
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  # This will deploy Redis on the local machine as a single Docker container: redis1
  # Redisr is available to the local clients using URL: "redis://localhost:6380"
  redis1:
    image: redis:alpine
    ports:
      - "6380:6379"

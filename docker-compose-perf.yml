version: '3'
services:

  datahub-a:
    # build: .
    image: 4cloudsolutions/helix-datahub:v1
    ports:
      - "9090:9090"
    # env_file: .env
    environment:
      JAVA_OPTS:
      PORT: 9090
      DATAHUB_CONFIG_FILE: config1.yml
      REDIS_URL: redis://redis-a:6379
      REDIS_URL_B: redis://redis-b:6379
      HELIX_REPLICATION_ROLE: A
      HELIX_REPLICATION_HOSTS: broker:9092
    depends_on:
      - redis-a
      - broker
    # volumes:
    #   - .:/app

  redis-a:
    image: redis:alpine
    ports:
      - "6379:6379"

  datahub-b:
    # build: .
    image: 4cloudsolutions/helix-datahub:v1
    ports:
      - "9096:9090"
    # env_file: .env
    environment:
      JAVA_OPTS:
      PORT: 9090
      DATAHUB_CONFIG_FILE: config1.yml
      REDIS_URL: redis://redis-a:6379
      REDIS_URL_B: redis://redis-b:6379
      HELIX_REPLICATION_ROLE: B
      HELIX_REPLICATION_HOSTS: broker:9092
    depends_on:
      - redis-b
      - broker
    # volumes:
    #   - .:/app

  redis-b:
    image: redis:alpine
    ports:
      - "6380:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

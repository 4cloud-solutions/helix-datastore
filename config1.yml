#
# Data Hub Configuration
#

helixConfig:
    nodeId: "NODE-1"
    
    #
    # Datagrid Configuration
    #

    # For Redis Stand-Alone (Single-Node) enter a single host below
    datagridHostsA:
      - "redis://localhost:6379"
    #  - "redis://localhost:7000"
    #  - "redis://localhost:7001"
    #  - "redis://localhost:7002"
    # For Redis Stand-Alone (Single-Node) enter a single host below
    datagridHostsB:
      - "redis://localhost:6380"
    #  - "redis://localhost:7000"
    #  - "redis://localhost:7001"
    #  - "redis://localhost:7002"
    datagridHealthCheckChannelName: "/datagrid/healthchecker"
    datagridHealthCheckerHeadStartMillis: 500
    datagridMillisToWaitBeforeConnectionRetry: 2000
    datagridMaxNumberOfConnectionRetries: 150

    #
    # Jedis Pool Configuration
    #
    jpMaxTotal: 1024                   # connections (used to be 30)
    jpMaxIdle: 1024                    # connections
    jpMinIdle: 1024                    # connections
    jpMinEvictableIdleTimeMillis: 60000    # ms
    jpTimeBetweenEvictionRunsMillis: 30000 # ms	
    jpBlockWhenExhausted: true
    jpMaxWaitMillis: 2000             # ms
    jpTestWhileIdle: true
    jpTestOnBorrow: true              # Must be set to true for DataHub
    jpTestOnReturn: false
    
    #
    # Replication Configuration
    #
    replicationRole: "NONE"         # One of: "A", "B", "NONE"
    replicationTopicNameRoot: ".datagrid.replication.topic"
    replicationTopicNumberOfPartitions: 1
    replicationTopicReplicationFactor: 1
    replicationTopicRetentionMs: 3600000    # 1 hour
    replicationHosts: "localhost:9092"
    # replicationHosts: "localhost:9092,localhost:9093,localhost:9094"
    replicationQueueName: "/datagrid/replication/queue"
    replicationTopicMonitorBoundry: 25      # 0 - no monitoring
    replicationQueueMonitorBoundry: 25      # 0 - no monitoring
    
    #
    # User Management Config
    #
    umUserMapDgKey: "/datagrid/users"
    umAutoCreateUsers: true
    umSuperAdminId: "superadmin"
    
    #
    # JWT Token validation parameters
    #
    jwtAuthEnabled: true
    jwtSharedSecretHs: "abcdefghi123456789"
    jwtPublicKeyRsa: "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnzyis1ZjfNB0bBgKFMSvvkTtwlvBsaJq7S5wA+kzeVOVpVWwkWdVha4s38XM/pa/yr47av7+z3VTmvDRyAHcaT92whREFpLv9cj5lTeJSibyr/Mrm/YtjCZVWgaOYIhwrXwKLqPr/11inWsAkfIytvHWTxZYEcXLgAXFuUuaS3uF9gEiNQwzGTU1v0FqkqTBr4B8nW3HCN47XUu0t8Y0e+lf4s4OxQawWD79J9/5d3Ry0vbV3Am1FtGJiJvOwRsIfVChDpYStTcHTCMqtvWbV6L11BWkpzGXSW4Hv43qa+GSYOD2QU68Mb59oSk2OB+BtOLpJofmbGEGgvmwyCI9MwIDAQAB-----END PUBLIC KEY-----"
    jwtUserIdClaimName: "userId"

    #
    # Session Management Config
    #
    sessionsTimingAccuracySeconds: 5
    sessionMapDgKey: "/datagrid/sessions/map"
    sessionExpirySetDgKey: "/datagrid/sessions/expiryset"    
    sessionExpiryQueueDgKey: "/datagrid/sessions/expiryqueue"
    sessionExpiryChannelDgKey: "/datagrid/sessions/expirychannel"
    
    #
    # Data Management Config - DataStoreManager
    #
    dmDataChangeChannelDgKey: "/datagrid/data/datachangechannel"
    dmProducerDataStoreDgKey: "/datagrid/users/%s/producers/%s/datastore" # userId and producerId are injected
    dmDataStoreSize: 3
    
    #
    # Subscription Management Config
    #
    submUserProducerSubscriptionsSetDgKey: "/datagrid/subscriptions/users/%s/producers/%s" # userId & producerId are injected
    submSessionSubscriptionsSetDgKey: "/datagrid/subscriptions/sessions/%s" # csid is injected
    
sessionTimeToLiveSeconds: 600          # seconds

logging:
  level: INFO
  loggers:
    org.apache.kafka: ERROR
    solutions.forcloud: INFO
    solutions.forcloud.helix4j: INFO
    solutions.forcloud.helix4j.datamodel: INFO    
    solutions.forcloud.helix4j.modules.replication: INFO
    solutions.forcloud.helix4j.datastore: INFO
  appenders:
    - type: console
      queueSize: 2048
      threshold: DEBUG
      timeZone: UTC
      logFormat: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [Thread-%t] %logger{0} - %m%n"
      # This does not work as in log4f.properties:
      # logFormat: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [Thread-%t] %c{1}.%M(line:%L) - %m%n"
    - type: file
      threshold: DEBUG
      timeZone: UTC
      logFormat: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [Thread-%t] %logger{0} - %m%n"
      # This does not work as in log4f.properties:
      # logFormat: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [Thread-%t] %c{1}.%M(line:%L) - %m%n"
      currentLogFilename: /tmp/data-store.log
      archivedLogFilenamePattern: /tmp/data-store-%d{yyyy-MM-dd}-%i.log.gz
      archivedFileCount: 7
      maxFileSize: 10MiB

# use the simple server factory if you only want to run on a single port
server:
  type: simple
  # applicationContextPath: /application
  # adminContextPath: /admin
  applicationContextPath: /data-store
  adminContextPath: /data-store/admin
  rootPath: /api
  connector:
    type: http
    port: 9091
  requestLog:
    appenders: []
    # appenders:
      # - type: console

# server:
  #  softNofileLimit: 1000
  #  hardNofileLimit: 1000
  # applicationConnectors:
    # - type: http
      # port: 8080
    # - type: https
      # port: 8443
      # keyStorePath: example.keystore
      # keyStorePassword: example
    # #this requires the alpn-boot library on the JVM's boot classpath
    # #- type: h2
    # #  port: 8445
    # #  keyStorePath: example.keystore
    # #  keyStorePassword: example
  # adminConnectors:
    # - type: http
      # port: 8081
    # - type: https
      # port: 8444
      # keyStorePath: example.keystore
      # keyStorePassword: example
